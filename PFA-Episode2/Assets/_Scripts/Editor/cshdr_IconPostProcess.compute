// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
RWTexture2D<float4> Result;
RWTexture2D<float4> Source;
int OutlinePixelSize;
float4 OutlineColor;
float ExposureMultiplier;

[numthreads(8,8,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    // TODO: insert actual code here!

    float4 r = Source[id.xy];
    
    
    //alpha clipping
    r.w = r.w>0;
/*
    //outline
    float a = Source[id.xy + int2(OutlinePixelSize,0)].w;
    float b = Source[id.xy - int2(OutlinePixelSize,0)].w;
    float c = Source[id.xy + int2(0,OutlinePixelSize)].w;
    float d = Source[id.xy - int2(0,OutlinePixelSize)].w;
    float outline = max(abs(a-b),abs(c-d));
     
    r.w = max(r.w,outline);
    r+= float4(OutlineColor.xyz * outline,0);

     //color correction
     r*= ExposureMultiplier;
*/
    Result[id.xy] = r;
}
